name: Publish case-log-extract

on:
  push:
    paths:
      - "clinical-archive/case-log-extract/**"
      - ".github/workflows/case-log-extract.yml"

env:
  working_dir: clinical-archive/case-log-extract

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.9]

    defaults:
      run:
        working-directory: ${{ env.working_dir }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-path: ~/.virtualenvs
          installer-parallel: true
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key:
            "${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-\
            poetry-${{ hashFiles(format('{0}/poetry.lock', env.working_dir)) }}"
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Install project
        run: poetry install --no-interaction
      - name: Build
        id: build
        run: |
          poetry build
          echo "::set-output name=WHEEL::$(ls dist/*.whl)"
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build.outputs.WHEEL }}
          path: ${{ env.working_dir }}/dist/*.whl
      - uses: actions/upload-artifact@v2
        with:
          name: app.py
          path: ${{ env.working_dir }}/src/app.py
